listiono-git: can you please add feature to this Dashboard with essential feature that can help with our work in pendaftaran

GitHub Copilot: # Enhanced Dashboard for Pendaftaran System 🚀

I'll add several essential features to help manage the registration process more effectively. These improvements will make the dashboard more informative and actionable.

## Solution Steps

1. Add a registration status overview with visual chart
2. Create a quick filters section for easy access to different registration statuses
3. Add a notification area for important alerts
4. Create a payment tracking section
5. Add a document verification tracker
6. Implement a tasks/to-do section for staff

### [index.php](file:///c%3A/xampp/htdocs/uttoraja/pendaftaran/list/index.php)

Update the dashboard with essential registration management features.

````php
<?php
require_once 'auth.php';
requireLogin();

// Set page title for navbar
$pageTitle = 'Dashboard';

// API URL with HTTPS
$apiUrl = 'https://uttoraja.com/pendaftaran/api/pendaftar';

// Add error handling for API call with cURL
function fetchData($url) {
    // ...existing code...
}

try {
    $response = fetchData($apiUrl);
    $data = json_decode($response, true);
    if (json_last_error() !== JSON_ERROR_NONE) {
        throw new Exception("Failed to parse JSON response");
    }
    
    // Get statistics
    $totalPendaftar = count($data);
    
    // Calculate new registrations (last 7 days)
    $newRegistrations = 0;
    $todayRegistrations = 0;
    $now = time();
    $oneWeekAgo = $now - (7 * 24 * 60 * 60);
    $today = strtotime(date('Y-m-d'));
    
    // Count faculties
    $faculties = [];
    
    // 🆕 Count status categories for dashboard
    $statusCounts = [
        'belum_diproses' => 0,
        'sudah_dihubungi' => 0,
        'berminat' => 0,
        'tidak_berminat' => 0,
        'pendaftaran_selesai' => 0
    ];
    
    // 🆕 Track documents and payments
    $documentsComplete = 0;
    $paymentComplete = 0;
    
    // Load status data from JSON
    $statusFile = __DIR__ . '/data/status.json';
    $statusData = [];
    if (file_exists($statusFile)) {
        $statusData = json_decode(file_get_contents($statusFile), true);
    }
    
    foreach($data as $pendaftar) {
        $registrationDate = strtotime($pendaftar['created_at'] ?? date('Y-m-d'));
        
        if ($registrationDate >= $oneWeekAgo) {
            $newRegistrations++;
        }
        
        if ($registrationDate >= $today) {
            $todayRegistrations++;
        }
        
        // Count by faculty/jurusan
        if (!empty($pendaftar['jurusan'])) {
            $faculty = $pendaftar['jurusan'];
            if (!isset($faculties[$faculty])) {
                $faculties[$faculty] = 0;
            }
            $faculties[$faculty]++;
        }
        
        // 🆕 Count by status
        $pendaftarId = $pendaftar['id'];
        $status = 'belum_diproses'; // Default status
        
        if (isset($statusData['pendaftar_status'][$pendaftarId]['status'])) {
            $status = $statusData['pendaftar_status'][$pendaftarId]['status'];
        }
        
        if (isset($statusCounts[$status])) {
            $statusCounts[$status]++;
        }
        
        // 🆕 Check for document and payment flags (you might need to adjust based on your actual data structure)
        if (isset($pendaftar['documents_complete']) && $pendaftar['documents_complete']) {
            $documentsComplete++;
        }
        
        if (isset($pendaftar['payment_complete']) && $pendaftar['payment_complete']) {
            $paymentComplete++;
        }
    }
    
    // Find most popular faculty
    $popularFaculty = '';
    $popularFacultyCount = 0;
    foreach ($faculties as $faculty => $count) {
        if ($count > $popularFacultyCount) {
            $popularFaculty = $faculty;
            $popularFacultyCount = $count;
        }
    }
    
    // Get latest registrations for display - sort by ID in descending order
    usort($data, function($a, $b) {
        return $b['id'] - $a['id']; // Sort by ID descending
    });
    $latestPendaftar = array_slice($data, 0, 5); // Get 5 latest entries
    
    // 🆕 Get pending tasks count (just a placeholder - implement your actual logic)
    $pendingTasks = 0;
    foreach ($statusCounts as $status => $count) {
        if ($status == 'belum_diproses' || $status == 'sudah_dihubungi') {
            $pendingTasks += $count;
        }
    }
    
    // 🆕 Get urgent follow-ups (contacted over 3 days ago but no status change)
    $urgentFollowUps = [];
    foreach ($data as $pendaftar) {
        $pendaftarId = $pendaftar['id'];
        if (isset($statusData['pendaftar_status'][$pendaftarId])) {
            $status = $statusData['pendaftar_status'][$pendaftarId]['status'];
            $updatedAt = strtotime($statusData['pendaftar_status'][$pendaftarId]['updated_at']);
            
            // If contacted but no status change for 3 days
            if ($status == 'sudah_dihubungi' && ($now - $updatedAt) > (3 * 24 * 60 * 60)) {
                $urgentFollowUps[] = $pendaftar;
            }
        }
    }
    // Limit to 5 for display
    $urgentFollowUps = array_slice($urgentFollowUps, 0, 5);
    
} catch (Exception $e) {
    $data = [];
    $error_message = $e->getMessage();
    $totalPendaftar = 0;
    $newRegistrations = 0;
    $todayRegistrations = 0;
    $popularFaculty = 'N/A';
    $popularFacultyCount = 0;
    $latestPendaftar = [];
    // 🆕 Initialize empty values for new features
    $statusCounts = [
        'belum_diproses' => 0,
        'sudah_dihubungi' => 0,
        'berminat' => 0,
        'tidak_berminat' => 0,
        'pendaftaran_selesai' => 0
    ];
    $documentsComplete = 0;
    $paymentComplete = 0;
    $pendingTasks = 0;
    $urgentFollowUps = [];
}
?>
<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - UT Toraja</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- 🆕 Add Chart

Similar code found with 1 license type

listiono-git: change this message
 const message = `Halo ${name},\n\nUntuk melanjutkan proses pendaftaran, silakan melakukan pembayaran ke:\n\nBank BRI\nNo. Rekening: 1234567890\nAtas Nama: UT Toraja\n\nSetelah melakukan pembayaran, mohon kirimkan bukti transfer ke nomor ini.\n\nTerima kasih,\nTim UT Toraja`;

 into this 
Selamat siang, ${name}
    
terima kasih sudah mendaftar di Sentra Layanan Universitas Terbuka (SALUT) Tana Toraja, untuk melanjutkan pendaftaran silahkan melakukan langkah berikut:

1. Membayar uang pendaftaran sebesar Rp200.000 ke nomor rekening berikut:
Nama : Ribka Padang (Kepala SALUT Tana Toraja)
Bank : Mandiri
Nomor Rekening : 1700000588917

2. Melengkapi berkas data diri berupa:
- Foto diri Formal (dapat menggunakan foto HP)
- Foto KTP asli (KTP asli difoto secara keseluruhan/tidak terpotong)
- Foto Ijazah dilegalisir cap basah atau Foto ijazah asli

GitHub Copilot: # Message Update in Payment Function 💸

I'll update the payment message in the `pendaftar.php` file to provide more detailed and accurate payment instructions for applicants.

## Step-by-Step Solution:
1. Locate the `sendPaymentMessage` function in the pendaftar.php file
2. Replace the existing message template with the new message content
3. Maintain proper formatting with newlines and template literals

### [pendaftar.php](file:///c%3A/xampp/htdocs/uttoraja/pendaftaran/list/pendaftar.php)

Update the WhatsApp payment message with more detailed bank information and requirements.

````php
// ...existing code...
function sendPaymentMessage(phone, name) {
    if (!phone) {
        showNotification('❌ Nomor telepon tidak tersedia', 'error');
        return;
    }
    
    // Format phone number for WhatsApp
    const formattedPhone = phone.startsWith('0') ? '62' + phone.slice(1) : phone;
    
    // Create message
    const message = `Selamat siang, ${name}
    
terima kasih sudah mendaftar di Sentra Layanan Universitas Terbuka (SALUT) Tana Toraja, untuk melanjutkan pendaftaran silahkan melakukan langkah berikut:

1. Membayar uang pendaftaran sebesar Rp200.000 ke nomor rekening berikut:
Nama : Ribka Padang (Kepala SALUT Tana Toraja)
Bank : Mandiri
Nomor Rekening : 1700000588917

2. Melengkapi berkas data diri berupa:
- Foto diri Formal (dapat menggunakan foto HP)
- Foto KTP asli (KTP asli difoto secara keseluruhan/tidak terpotong)
- Foto Ijazah dilegalisir cap basah atau Foto ijazah asli`;
    
    // Open WhatsApp
    const whatsappUrl = `https://wa.me/${formattedPhone}?text=${encodeURIComponent(message)}`;
    window.open(whatsappUrl, '_blank');
}
// ...existing code...
````

This change replaces the generic payment message with specific instructions including:
- ✅ Accurate bank details (Mandiri instead of BRI)
- ✅ Correct account holder name (Ribka Padang)
- ✅ Precise amount (Rp200.000)
- ✅ Detailed requirements for documents
- ✅ Clear formatting for better readability

The updated message will help applicants complete their registration process more efficiently! 🎓

Made changes.

listiono-git: an then change Selamat siang to adapt to time, use gmt +8 local time

GitHub Copilot: # Time-Based Greeting Update in WhatsApp Message 🕒

I'll update the greeting in the payment message to adapt to the local time (GMT+8) instead of always using "Selamat siang".

## Step-by-Step Solution:
1. Create a helper function to get the appropriate greeting based on the current time
2. Implement the time-based logic for GMT+8 timezone
3. Replace the static greeting with the dynamic one in the payment message

### [pendaftar.php](file:///c%3A/xampp/htdocs/uttoraja/pendaftaran/list/pendaftar.php)

Update the payment message greeting to be time-sensitive:

````php
// ...existing code...
function sendPaymentMessage(phone, name) {
    if (!phone) {
        showNotification('❌ Nomor telepon tidak tersedia', 'error');
        return;
    }
    
    // Format phone number for WhatsApp
    const formattedPhone = phone.startsWith('0') ? '62' + phone.slice(1) : phone;
    
    // Get time-based greeting (GMT+8)
    const getGreeting = () => {
        // Use GMT+8 timezone (Indonesia Eastern Time)
        const now = new Date();
        const utcHours = now.getUTCHours();
        const gmt8Hours = (utcHours + 8) % 24; // Convert to GMT+8
        
        // Determine appropriate greeting based on time
        if (gmt8Hours >= 5 && gmt8Hours < 12) {
            return "Selamat pagi";
        } else if (gmt8Hours >= 12 && gmt8Hours < 15) {
            return "Selamat siang";
        } else if (gmt8Hours >= 15 && gmt8Hours < 18) {
            return "Selamat sore";
        } else {
            return "Selamat malam";
        }
    };
    
    // Create message with dynamic greeting
    const message = `${getGreeting()}, ${name}
    
terima kasih sudah mendaftar di Sentra Layanan Universitas Terbuka (SALUT) Tana Toraja, untuk melanjutkan pendaftaran silahkan melakukan langkah berikut:

1. Membayar uang pendaftaran sebesar Rp200.000 ke nomor rekening berikut:
Nama : Ribka Padang (Kepala SALUT Tana Toraja)
Bank : Mandiri
Nomor Rekening : 1700000588917

2. Melengkapi berkas data diri berupa:
- Foto diri Formal (dapat menggunakan foto HP)
- Foto KTP asli (KTP asli difoto secara keseluruhan/tidak terpotong)
- Foto Ijazah dilegalisir cap basah atau Foto ijazah asli`;
    
    // Open WhatsApp
    const whatsappUrl = `https://wa.me/${formattedPhone}?text=${encodeURIComponent(message)}`;
    window.open(whatsappUrl, '_blank');
}
// ...existing code...
````

This improved implementation:

- ⏰ Creates a `getGreeting()` function that calculates the current time in GMT+8 timezone
- 🌍 Properly handles timezone conversion by adding 8 hours to UTC time
- 🔄 Returns different greetings based on the time of day:
  - "Selamat pagi" (5:00 AM - 11:59 AM)
  - "Selamat siang" (12:00 PM - 2:59 PM)
  - "Selamat sore" (3:00 PM - 5:59 PM)
  - "Selamat malam" (6:00 PM - 4:59 AM)
- 📱 Uses the dynamic greeting at the beginning of the WhatsApp message

Now the message will have a personalized greeting appropriate to the recipient's local time! 🎯

Made changes.

listiono-git: now i want to add options for messages. in this form there is input called Jalur Program, there is two Jalur Program Reguler and RPL and these two has differrent in paymen and documen so make it check wheter its Reguler or RPL, the Reguler already good with the message now for RPL see the text Below:
${getGreeting()}, ${name}
    
terima kasih sudah mendaftar di Sentra Layanan Universitas Terbuka (SALUT) Tana Toraja, untuk melanjutkan pendaftaran silahkan melakukan langkah berikut:

1. Membayar uang pendaftaran Transfer Nilai/RPL sebesar Rp600.000 ke nomor rekening berikut:
Nama : Ribka Padang (Kepala SALUT Tana Toraja)
Bank : Mandiri
Nomor Rekening : 1700000588917

2. Melengkapi berkas data diri berupa:
- Foto diri Formal (dapat menggunakan foto HP)
- Foto KTP asli (KTP asli difoto secara keseluruhan/tidak terpotong)
- Foto Ijazah  asli
- Mengisi formulir kelengkapan data lainny(berkas kelengkapan data akan dikirimkan)

GitHub Copilot: # Add Program Path-Specific Messages to WhatsApp Function 🎓

I'll update the `sendPaymentMessage` function to customize the message content based on the applicant's program path (Jalur Program), differentiating between Regular and RPL paths.

## Step-by-Step Solution:
1. Modify the `sendPaymentMessage` function to accept the program path parameter
2. Add conditional logic to select the appropriate message template
3. Update the function calls in the HTML to pass the program path

### [pendaftar.php](file:///c%3A/xampp/htdocs/uttoraja/pendaftaran/list/pendaftar.php)

````php
// ...existing code...

/**
 * Send payment instruction WhatsApp message
 * @param {string} phone - Phone number
 * @param {string} name - Pendaftar name
 * @param {string} programPath - Jalur Program (Reguler or RPL)
 */
function sendPaymentMessage(phone, name, programPath) {
    if (!phone) {
        showNotification('❌ Nomor telepon tidak tersedia', 'error');
        return;
    }
    
    // Format phone number for WhatsApp
    const formattedPhone = phone.startsWith('0') ? '62' + phone.slice(1) : phone;
    
    // Get time-based greeting (GMT+8)
    const getGreeting = () => {
        // Use GMT+8 timezone (Indonesia Eastern Time)
        const now = new Date();
        const utcHours = now.getUTCHours();
        const gmt8Hours = (utcHours + 8) % 24; // Convert to GMT+8
        
        // Determine appropriate greeting based on time
        if (gmt8Hours >= 5 && gmt8Hours < 12) {
            return "Selamat pagi";
        } else if (gmt8Hours >= 12 && gmt8Hours < 15) {
            return "Selamat siang";
        } else if (gmt8Hours >= 15 && gmt8Hours < 18) {
            return "Selamat sore";
        } else {
            return "Selamat malam";
        }
    };
    
    // Create message with dynamic greeting based on program path
    let message;
    
    // 🔄 Check if program path is RPL and use the appropriate message content
    if (programPath === 'RPL') {
        // RPL specific message with higher payment amount
        message = `${getGreeting()}, ${name}
    
terima kasih sudah mendaftar di Sentra Layanan Universitas Terbuka (SALUT) Tana Toraja, untuk melanjutkan pendaftaran silahkan melakukan langkah berikut:

1. Membayar uang pendaftaran Transfer Nilai/RPL sebesar Rp600.000 ke nomor rekening berikut:
Nama : Ribka Padang (Kepala SALUT Tana Toraja)
Bank : Mandiri
Nomor Rekening : 1700000588917

2. Melengkapi berkas data diri berupa:
- Foto diri Formal (dapat menggunakan foto HP)
- Foto KTP asli (KTP asli difoto secara keseluruhan/tidak terpotong)
- Foto Ijazah asli
- Mengisi formulir kelengkapan data lainny(berkas kelengkapan data akan dikirimkan)`;
    } else {
        // Regular program message (default)
        message = `${getGreeting()}, ${name}
    
terima kasih sudah mendaftar di Sentra Layanan Universitas Terbuka (SALUT) Tana Toraja, untuk melanjutkan pendaftaran silahkan melakukan langkah berikut:

1. Membayar uang pendaftaran sebesar Rp200.000 ke nomor rekening berikut:
Nama : Ribka Padang (Kepala SALUT Tana Toraja)
Bank : Mandiri
Nomor Rekening : 1700000588917

2. Melengkapi berkas data diri berupa:
- Foto diri Formal (dapat menggunakan foto HP)
- Foto KTP asli (KTP asli difoto secara keseluruhan/tidak terpotong)
- Foto Ijazah dilegalisir cap basah atau Foto ijazah asli
- Mengisi formulir Keabsahan Data (dikirimkan)`;
    }
    
    // Open WhatsApp
    const whatsappUrl = `https://wa.me/${formattedPhone}?text=${encodeURIComponent(message)}`;
    window.open(whatsappUrl, '_blank');
}

// ...existing code...
````

Now, update the button call in the table rows section to pass the program path:

````php


Made changes.

// ...existing code...
<button onclick="sendPaymentMessage('<?php echo $pendaftar['nomor_hp']; ?>', '<?php echo addslashes($pendaftar['nama_lengkap'] ?? ''); ?>', '<?php echo $pendaftar['jalur_program'] ?? 'Reguler'; ?>')"
        class="bg-green-500 text-white px-3 py-1 rounded-lg hover:bg-green-600 transition duration-200"
        title="Kirim Pesan Pembayaran">
    <i class="fab fa-whatsapp"></i> 2
</button>
// ...existing code...
````

These changes will:

- ✅ Add a new parameter `programPath` to the `sendPaymentMessage` function
- ✅ Implement conditional logic to choose between Regular and RPL message templates
- ✅ Keep the time-based greeting functionality
- ✅ Pass the program path from the pendaftar data when calling the function
- ✅ Properly handle cases where jalur_program might be null (defaulting to 'Reguler')

Now when you click the WhatsApp button, it will automatically detect if the applicant is in the RPL program and send the appropriate payment instructions! 📲💬

Made changes.

listiono-git: fix syntax error

GitHub Copilot: 